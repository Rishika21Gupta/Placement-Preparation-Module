/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
int MaxVal(TreeNode* root){
    TreeNode* temp=root;
    if(temp==NULL){
        return -1;
    }
    while(temp->right!=NULL){
        temp=temp->right;
    }
    return temp->val;
}

    TreeNode* deleteNode(TreeNode* root, int key) {
        if(root==NULL)
        {
            return NULL;
        }
        if(root->val==key){
           if(root->left==NULL && root->right==NULL){
               return NULL;
           }

          else if(root->left==NULL && root->right!=NULL){
               TreeNode* child=root->right;
               return child;
           }

           else if(root->left!=NULL && root->right==NULL){
               TreeNode* child=root->left;
               return child;
           }

           else{
               int inorderpred=MaxVal(root->left);
               root->val=inorderpred;
               root->left=deleteNode(root->left,inorderpred);
               return root;
           }

        }

        else if(root->val>key){
           root->left=deleteNode(root->left,key);
        }

        else{
          root->right= deleteNode(root->right,key);
        }

        return root;
        
    }
};
